;; Object http/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "http/"
  :tables (list 
   (semanticdb-table "httpclient.hpp"
    :major-mode 'c++-mode
    :tags '(("HTTPCLIENTHPP" variable (:constant-flag t) nil [31 47]) ("sock.h" include nil (dependency-file none) [46 63]) ("string" include (:system-flag t) (dependency-file none) [64 81]) ("httpclient" type (:members (("protected" label nil (reparse-symbol classsubparts) [124 134]) ("paserUrl" function (:prototype-flag t :arguments (("url" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [154 172])) :type "void") (reparse-symbol classsubparts) [140 173]) ("buildHead" function (:prototype-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [179 199]) ("public" label nil (reparse-symbol classsubparts) [200 207]) ("httpMethod" type (:members (("POSTMETHOD" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [231 242]) ("GETMETHOD" variable (:constant-flag t :type "int") (reparse-symbol enumsubparts) [243 254])) :type "enum") (reparse-symbol classsubparts) [213 255]) ("httpclient" function (:constructor-flag t :type ("httpclient" type (:type "class") nil nil)) (reparse-symbol classsubparts) [262 296]) ("httpclient" function (:constructor-flag t :arguments (("url" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [313 331])) :type ("httpclient" type (:type "class") nil nil)) (reparse-symbol classsubparts) [302 413]) ("httpclient" function (:destructor-flag t :typemodifiers ("virtual") :type "void") (reparse-symbol classsubparts) [419 443]) ("setMethod" function (:arguments (("method" variable (:type ("httpMethod" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [473 492])) :type "void") (reparse-symbol classsubparts) [456 549]) ("setBody" function (:arguments (("body" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [570 589])) :type "void") (reparse-symbol classsubparts) [555 642]) ("setUrl" function (:arguments (("url" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [662 681])) :type "void") (reparse-symbol classsubparts) [648 763]) ("setHead" function (:arguments (("head" variable (:constant-flag t :type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [785 805])) :type "void") (reparse-symbol classsubparts) [770 874]) ("getResult" function (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [886 960]) ("sendRequest" function (:prototype-flag t :typemodifiers ("virtual") :type "bool") (reparse-symbol classsubparts) [977 1005]) ("handleResponse" function (:prototype-flag t :typemodifiers ("virtual") :type "bool") (reparse-symbol classsubparts) [1011 1042]) ("protected" label nil (reparse-symbol classsubparts) [1049 1059]) ("sock_" variable (:type ("Sock" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1065 1076]) ("url_" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1082 1094]) ("method_" variable (:type ("httpMethod" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1100 1119]) ("body_" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1125 1138]) ("host_" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1144 1157]) ("path_" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1163 1176]) ("head_" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1182 1195]) ("port_" variable (:type "unsigned short") (reparse-symbol classsubparts) [1207 1228]) ("result_" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1235 1250])) :type "class") nil [105 1258]))
    :file "httpclient.hpp"
    :pointmax 1278
    :unmatched-syntax 'nil
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre4"
  :semanticdb-version "2.0pre4"
  )
